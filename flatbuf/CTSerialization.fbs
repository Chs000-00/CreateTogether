namespace CTSerialization.base; 

// Yeah idk if I need to add include or not
// include "CCSerialization.fbs";

union MessageBody {
  CreateObjects,
  DeleteObjects,
  MoveObjects,
  LevelSettingChange,
  RotateObject,
  PasteObject,
  ModifyObject,
  UpdateFont,
  UpdateSong,
  ChangeGroupID,
  RequestLevel,
  ChangeArt,
  SpeedChange,
  ReturnLevelString,
  GameModeChange,
  AdminAction
}

table MessageHeader {
  body:[MessageBody]; // Might remove this I guess.
}

table CreateObjects {
  obj:GDGameObjectMin;
}

table DeleteObjects {
  uniqueIDList:[string];
}

table MoveObjects {
  uniqueIDList:[string];
  positionOffset:CCPosI;
}

table LevelSettingChange {
  settingID:uint16;
}

table RotateObject {
  rotation:float;
  // I... Think this is the anchor point... No clue...
  anchor:CCPos;
  uniqueIDList:[string];
}

table PasteObjects {
  uniqueIDList:[string];
  pastedString:string;
}

table ModifyObjects {
  uniqueIDList:[string];
  pastedString:string;
}

table UpdatedFont {
  fontID:uint16;
}

table UpdateSong {
  songID:uint64;
}

table ChangeGroupID {
  groupID:uint32; // TODO: uhh uhh I forgot my uint32max this might not be hyperoptimal
  isAdding:bool;
  uniqueIDList:[string];
}

// TODO: ChangeArt
table ChangeArt {

}

// TODO: SpeedChange
table SpeedChange {

}

table GameModeChange {
  gameMode:uint8; // I guess... this dosen't use enums?
}

table RequestLevel { }

table ReturnLevelString {
  uniqueIDList:[string];
  levelString:string;
}

enum AdminActions : byte { SteamUserIDBan = 1, DisableInteraction, Kick }

table AdminAction {
  action:AdminActions;
  userId:uint64; // This might not be unsigned. TODO: Check
  timeoutEpoch:uint64;
  reason:string;
}

root_type MessageHeader;